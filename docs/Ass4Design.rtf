{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid3\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid103\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid104\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid202\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid203\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid302\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid402\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid403\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid502\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid503\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid504\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid602\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid603\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid702\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
{\info
{\keywords cursorLocation=64, fitsPagesWidth=1}}\margl1440\margr1440\margb1440\margt1440\vieww20280\viewh15560\viewkind1\viewscale156
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs26 \cf0 Design Document: Polymorphism (Tournament) \
CS 162, Assignment 4\
Collin James\
\

\b Initial Design\

\b0 main(): \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}create and instantiate 2 team pointers\
{\listtext	\'95	}create Tournament pointer\
{\listtext	\'95	}user 1 inputs number of creatures per team (intakeInt())\
{\listtext	\'95	}user 1 enters that number of creature types (loop) (mainMenu() variant, intakeInt())\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls1\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}call addCreature(type) helper function (case switch with types), which calls team::addMember\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}user 2 enters that number of creature types (loop)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls1\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}call addCreature(type) helper function (case switch with types)\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}add 2 teams to tournament object by instantiation\
{\listtext	\'95	}call Tournament::doTourney() to do the tournament\
{\listtext	\'95	}call Tournament::printStandings()\
{\listtext	\'95	}prompt user to enter yes/no for print winner (intakeString(), while loop)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls1\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if yes, call tournament::printStandings()\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls1\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}delete pointers, end program\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls1\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if no, delete pointers, end program\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 	\
Tournament:\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}pass in two teams on instantiation\
{\listtext	\'95	}doTourney()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}while team1 is active and team2 is active\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}pick topMember() of team\
{\listtext	
\f1 \uc0\u8259 
\f0 	}doRound(team1->getTopMember(), team2->getTopMember())\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}doRound(creature1, creature2)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}while !isDead and !isDead\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}damage is result of creature1 attacking creature2\
\pard\tx2380\tx2880\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2880\fi-2880\ql\qnatural\pardirnatural
\ls2\ilvl3\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if  damage greater than 0, add points for correct team with computePoints()\
\pard\tx2380\tx2880\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2880\fi-2880\ql\qnatural\pardirnatural
\ls2\ilvl3\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if  damage > 0, team2->addPoints(computePoints(damage))\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}run Team::moveFighters() on both teams\
{\listtext	
\f1 \uc0\u8259 
\f0 	}move dead creature to standings\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}void moveToStandings()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}move a dead creature to standings stack\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}int computePoints(int damage):\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return damage \'95 defender strength rating \'f7 attacker strength rating\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}strength ratings: Goblin = 1, Barbarian = 2, Shadow = 3, Reptile = 4, BlueMen = 5\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if damage is < 0, means fight is won\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return 10 points for winner of fight\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}printWinner()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}print top 3 fighters\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}run Stack getTop() 3 times and print to screen\
{\listtext	
\f1 \uc0\u8259 
\f0 	}move top 3 to topThree queue\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}print winning team info\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}compare and print appropriate team winner\
{\listtext	
\f1 \uc0\u8259 
\f0 	}print points for both teams\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}printStandings()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if topThree getFront()\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}print topThree (removeFront 3 times)\
{\listtext	
\f1 \uc0\u8259 
\f0 	}print standings stack (loop until\'85)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}otherwise (top 3 not determined)\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}print standings stack (loop until\'85)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
Team:\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}Create empty queue and stack on instantiation; set points & activeMembers to 0\
{\listtext	\'95	}addMember(Creature *)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}add it to the members queue\
{\listtext	
\f1 \uc0\u8259 
\f0 	}add 1 to activeMembers\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}getFrontMember()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return the result of members->getFront() or NULL if no getActiveMembers()\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}getActiveMembers()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return activeMembers integer\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}moveFighters()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}run members->getFront->isDead()\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls3\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if dead, removeFront() from members and addTop to losers stack\
{\listtext	
\f1 \uc0\u8259 
\f0 	}if not dead, Creature::restoreDamage() on front creature, removeFront(), and addBack() to members queue\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}addPoints(int points)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}add points to this->points\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}int getPoints()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return points\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}resetTeam()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if creatures in losers stack, add them back to queue\
{\listtext	
\f1 \uc0\u8259 
\f0 	}call Creature::revive() on each creature\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
Creature\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls4\ilvl0\cf0 {\listtext	\'95	}Same as Assignment 3 creatures, except\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls4\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}Add restoreDamage() to base Creature class\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Revised Design\

\b0 main(): \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls5\ilvl0\cf0 {\listtext	\'95	}create and instantiate 2 team pointers\
{\listtext	\'95	}create Tournament pointer\
{\listtext	\'95	}user 1 inputs number of creatures per team (intakeInt())\
{\listtext	\'95	}user 1 enters that number of creature types (loop) (mainMenu() variant, intakeInt())\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls5\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}call addCreature(type) helper function (case switch with types), which calls team::addMember\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls5\ilvl0\cf0 {\listtext	\'95	}user 2 enters that number of creature types (loop)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls5\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}call addCreature(type) helper function (case switch with types)\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls5\ilvl0\cf0 {\listtext	\'95	}add 2 teams to tournament object by instantiation\
{\listtext	\'95	}do the tournament\
{\listtext	\'95	}print the 
\b winner
\b0 \
{\listtext	\'95	}prompt user to enter yes/no for print 
\b standings
\b0  (intakeString(), while loop)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls5\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if yes, call tournament::printStandings()\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls5\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}delete pointers, end program\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls5\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if no, delete pointers, end program\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
	\
Tournament:\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls6\ilvl0\cf0 {\listtext	\'95	}pass in two teams
\b  and number of fighters 
\b0 on instantiation; 
\b create empty Stacks for standings and top 3; create empty IntStacks for team names and top 3 names; create string of names of creatures
\b0 \
{\listtext	\'95	}doTourney()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}while team1 is active and team2 is active\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls6\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}pick topMember() of team\
{\listtext	
\f1 \uc0\u8259 
\f0 	}doRound(team1->getTopMember(), team2->getTopMember())\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls6\ilvl0\cf0 {\listtext	\'95	}doRound(creature1, creature2)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}while 
\b both creatures are alive
\b0 \
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls6\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}damage is result of creature1 attacking creature2\
\pard\tx2380\tx2880\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2880\fi-2880\ql\qnatural\pardirnatural
\ls6\ilvl3\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if  damage greater than 0, add points for correct team with computePoints()\
{\listtext	
\f1 \uc0\u8259 
\f0 	}if a creature is dead, 
\b add kill bonus points
\b0 \
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}run Team::moveFighters() on both teams\
{\listtext	
\f1 \uc0\u8259 
\f0 	}move dead creature to standings\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls6\ilvl0\cf0 {\listtext	\'95	}void moveToStandings()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}move a dead creature to standings stack\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls6\ilvl0\cf0 {\listtext	\'95	}int computePoints(int damage):\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return damage \'95 defender strength rating \'f7 attacker strength rating; 
\b be sure to cast as double while doing division and multiplication
\b0 \
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls6\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}strength ratings: Goblin = 1, Barbarian = 2, Shadow = 3, Reptile = 4, BlueMen = 5\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\strike \strikec0 if damage is < 0, means fight is won\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls6\ilvl2\cf0 \strikec0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return 
\b 50
\b0  points for winner of fight\strike0\striked0 \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls6\ilvl0\cf0 {\listtext	\'95	}printWinner()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}
\b finish moving all members of team to standings Stack (also add team numbers to appropriate IntStack)
\b0 \
{\listtext	
\f1 \uc0\u8259 
\f0 	}print top 3 fighters (
\b or top # of fighters if less than 3
\b0 ) 
\b and teams
\b0 \
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls6\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}run Stack getTop() 3 times and print 
\b type and team 
\b0 to screen\
{\listtext	
\f1 \uc0\u8259 
\f0 	}move top 3 to topThree 
\b Stack (and corresponding name Stack)\
\ls6\ilvl2
\b0 {\listtext	
\f1 \uc0\u8259 
\f0 	}
\b move top 3 back to top of standings Stack (and corresponding name Stack)
\b0 \
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}print winning team info\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls6\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}compare and print appropriate team winner\
{\listtext	
\f1 \uc0\u8259 
\f0 	}print points for both teams\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls6\ilvl0\cf0 {\listtext	\'95	}printStandings()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if 
\b a creature is at top of standings
\b0 \
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls6\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}\strike \strikec0 print topThree (removeFront 3 times)\strike0\striked0 \
{\listtext	
\f1 \uc0\u8259 
\f0 	}print standings stack 
\b by removing one by one
\b0  (loop until 
\b NULL is returned and standings is empty
\b0 )\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls6\ilvl0\cf0 {\listtext	\'95	}
\b finishStandings()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls6\ilvl1
\b0 \cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}
\b move all remaining members of Teams to standings Stack
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
Team:\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}Create empty queue and stack on instantiation; set points & activeMembers to 0\
{\listtext	\'95	}addMember(Creature *)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}add it to the members queue\
{\listtext	
\f1 \uc0\u8259 
\f0 	}add 1 to active_members\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}getFrontMember()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return the result of members->getFront() 
\b (may be NULL
\b0  
\b if no creatures in Queue)
\b0 \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}
\b releaseFrontMember(\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1
\b0 \cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}
\b return the result of members->removeFront() and decrement active_members
\b0 \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}getActiveMembers()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return activeMembers integer\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}moveFighters()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}run members->getFront->isDead()\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls7\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if dead, removeFront() from members and add() to losers stack\
{\listtext	
\f1 \uc0\u8259 
\f0 	}if not dead, Creature::
\b heal
\b0 () on front creature, removeFront(), and addBack() to members queue\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}addPoints(int points)\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}add points to this->points\
{\listtext	
\f1 \uc0\u8259 
\f0 	}
\b return current points
\b0 \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}int getPoints()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}return 
\b current
\b0  points\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0\cf0 {\listtext	\'95	}resetTeam()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}if creatures in losers stack, add them back to queue\
{\listtext	
\f1 \uc0\u8259 
\f0 	}call Creature::revive() on each creature\
\pard\tx1660\tx2160\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li2160\fi-2160\ql\qnatural\pardirnatural
\ls7\ilvl2\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}
\b requires removing them to a temporary queue and then back to members queue\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls7\ilvl0
\b0 \cf0 {\listtext	\'95	}
\b getNumber()\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls7\ilvl1
\b0 \cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}
\b return the team number (i.e. 1 for \'93team 1\'94)
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
Creature\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\ql\qnatural\pardirnatural
\ls8\ilvl0\cf0 {\listtext	\'95	}Same as Assignment 3 creatures, except\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\ql\qnatural\pardirnatural
\ls8\ilvl1\cf0 {\listtext	
\f1 \uc0\u8259 
\f0 	}Add 
\b heal
\b0 () to base Creature class\
\ls8\ilvl1
\b {\listtext	
\f1 \uc0\u8259 
\f0 	}Add kill() to base Creature class (for testing)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\
\
\
\
\
\
Reflection
\b0 \
	The design came together fairly easily for this assignment. I knew that I would have to alter my Stacks and Queues to take Creature pointers instead of integers (and that my Queue would be circular), and I knew that altering Creature to heal() would be easy once I figured out an algorithm. The algorithm that I came up with was simple but did the trick. The main part of the design was creating classes to handle the actual tournament and team concepts. As you can see in my design documents, I decided that Tournament was my top class, which contained two Teams and a Stack of Creatures. Teams contained a Queues and Stack of Creatures. The concept was that Team would control its Queue of Creatures and Tournament would orchestrate the fighting and point distribution of its Teams. My basic design of these classes stayed the same, although I added some convenience functions and logic where necessary, which can be seen in the design notes.\
	A problem arose late in coding when I realized that I had forgotten to figure in team names when printing the standings and winners. My idea was to create companion Stacks for my members in Team. This Stack (called IntStack and nearly identical to the lab 6 Stack) just holds integers instead of Creatures and is a mirror of the member Stack, and is updated similarly to the other Stack. I would like to have instead implemented a Stack (and Queue) that held both Creature pointers and team numbers, but it would have been too much work late in the game. My fix worked fine despite its inelegance.\

\b 	
\b0 As noted in the testing docs, I had a problem with segmentation faults early on in testing Tournament. Using gdb and (mostly) my own cout statements, I narrowed it down to my trying to delete pointers that were pointing to already-deleted memory. I found that I was deleting the two Team pointers in the Tournament deconstructor and then again in main(); once I stopped deleting in main(), the problem stopped. I decided it was best to let the Tournament deconstructor take care of the deletion of these pointers.
\b \
	
\b0 All told, it was a fun and pretty satisfying assignment. I was able to reuse a lot of code that I had created earlier in the semester, particularly from Assignment 3, Lab 6 and 8, and Assignment 2. That sped up the process considerably, and I am glad that I took the time to make sure the earlier code worked solidly when doing previous assignments. }